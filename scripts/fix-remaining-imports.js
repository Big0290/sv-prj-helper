#!/usr/bin/env node\n\n/**\n * Fix Remaining Interface Import Issues Script\n */\n\nimport { readFile, writeFile } from 'fs/promises';\n\nconst FIXES = [\n  {\n    file: 'src/lib/components/organisms/chat/Chat/Chat.types.ts',\n    search: 'import type { Snippet } from \\'svelte\\';\\n\\nexport interface ChatProps {\\n\\tmessages?: Message[];',\n    replace: 'import type { Snippet } from \\'svelte\\';\\nimport type { Message } from \\'../../../types/shared.js\\';\\n\\nexport interface ChatProps {\\n\\tmessages?: Message[];'\n  },\n  {\n    file: 'src/lib/components/organisms/chat/ChatRoomList/ChatRoomList.types.ts',\n    search: 'import type { Snippet } from \\'svelte\\';\\n\\nexport interface ChatRoomListProps {\\n\\trooms: ChatRoom[];',\n    replace: 'import type { Snippet } from \\'svelte\\';\\nimport type { ChatRoom } from \\'../../../types/shared.js\\';\\n\\nexport interface ChatRoomListProps {\\n\\trooms: ChatRoom[];'\n  },\n  {\n    file: 'src/lib/components/organisms/chat/ChatSearch/ChatSearch.types.ts',\n    search: 'import type { Snippet } from \\'svelte\\';\\n\\nexport interface ChatSearchProps {\\n\\tresults?: SearchResult[];',\n    replace: 'import type { Snippet } from \\'svelte\\';\\nimport type { SearchResult } from \\'../../../types/shared.js\\';\\n\\nexport interface ChatSearchProps {\\n\\tresults?: SearchResult[];'\n  },\n  {\n    file: 'src/lib/components/organisms/chat/MessageAttachment/MessageAttachment.types.ts',\n    search: 'import type { Snippet } from \\'svelte\\';\\n\\nexport interface MessageAttachmentProps {\\n\\tattachment: Attachment;',\n    replace: 'import type { Snippet } from \\'svelte\\';\\nimport type { Attachment } from \\'../../../types/shared.js\\';\\n\\nexport interface MessageAttachmentProps {\\n\\tattachment: Attachment;'\n  }\n];\n\nasync function fixRemainingImports() {\n  console.log('üîß Fixing remaining interface import issues...');\n  \n  for (const fix of FIXES) {\n    try {\n      let content = await readFile(fix.file, 'utf-8');\n      \n      if (content.includes(fix.search)) {\n        content = content.replace(fix.search, fix.replace);\n        await writeFile(fix.file, content);\n        console.log(`   ‚úÖ Fixed imports in ${fix.file}`);\n      } else {\n        console.log(`   ‚ö†Ô∏è  Pattern not found in ${fix.file}`);\n      }\n    } catch (error) {\n      console.warn(`   ‚ö†Ô∏è  Could not fix ${fix.file}: ${error.message}`);\n    }\n  }\n}\n\nfixRemainingImports().catch(console.error);"