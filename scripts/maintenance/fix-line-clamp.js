#!/usr/bin/env node\n\n/**\n * Fix CSS line-clamp compatibility warnings\n */\n\nimport { readFile, writeFile } from 'fs/promises';\nimport { glob } from 'glob';\n\nasync function fixLineClampWarnings() {\n  console.log('üîß Fixing CSS line-clamp compatibility warnings...');\n  \n  // Find all .svelte files\n  const svelteFiles = await glob('src/lib/**/*.svelte');\n  \n  for (const filePath of svelteFiles) {\n    try {\n      let content = await readFile(filePath, 'utf-8');\n      let modified = false;\n      \n      // Replace -webkit-line-clamp with both properties\n      if (content.includes('-webkit-line-clamp:')) {\n        // Pattern to match -webkit-line-clamp: X; and add line-clamp: X;\n        content = content.replace(\n          /(-webkit-line-clamp:\\s*\\d+;)/g,\n          (match, webkitClamp) => {\n            const clampValue = webkitClamp.match(/\\d+/)[0];\n            return `line-clamp: ${clampValue};\\n\\t\\t${webkitClamp}`;\n          }\n        );\n        modified = true;\n      }\n      \n      if (modified) {\n        await writeFile(filePath, content);\n        console.log(`   ‚úÖ Fixed line-clamp in ${filePath}`);\n      }\n    } catch (error) {\n      console.warn(`   ‚ö†Ô∏è  Could not fix ${filePath}: ${error.message}`);\n    }\n  }\n}\n\nfixLineClampWarnings().catch(console.error);"