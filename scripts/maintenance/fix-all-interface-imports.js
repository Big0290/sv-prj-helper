#!/usr/bin/env node\n\n/**\n * Fix All Interface Import Issues Script\n */\n\nimport { readFile, writeFile } from 'fs/promises';\nimport { glob } from 'glob';\n\nconst INTERFACE_MAPPINGS = {\n  'Message': '../../../types/shared.js',\n  'ChatRoom': '../../../types/shared.js',\n  'SearchResult': '../../../types/shared.js',\n  'Attachment': '../../../types/shared.js',\n  'Reaction': '../../../types/shared.js',\n  'User': '../../../types/shared.js',\n  'PinnedMessage': '../../../types/shared.js',\n  'CarouselItem': '../../../types/shared.js',\n  'TimelineItem': '../../../types/shared.js',\n  'TreeNode': '../../../types/shared.js',\n  'CommandItem': '../../../types/shared.js',\n  'ContextMenuItem': '../../../types/shared.js',\n  'MediaItem': '../../../types/shared.js',\n  'NavItem': '../../../types/shared.js',\n  'Step': '../../../types/shared.js',\n  'Tab': '../../../types/shared.js',\n  'Column': '../../../types/shared.js',\n  'Row': '../../../types/shared.js',\n  'Action': '../../../types/shared.js',\n  'VideoItem': '../../../types/shared.js'\n};\n\nasync function fixAllInterfaceImports() {\n  console.log('üîß Fixing all interface import issues...');\n  \n  // Find all .types.ts files\n  const typeFiles = await glob('src/lib/components/**/*.types.ts');\n  \n  for (const filePath of typeFiles) {\n    try {\n      let content = await readFile(filePath, 'utf-8');\n      let modified = false;\n      let importsToAdd = [];\n      \n      // Check which interfaces are used in this file\n      for (const [interfaceName, importPath] of Object.entries(INTERFACE_MAPPINGS)) {\n        if (content.includes(interfaceName) && !content.includes(`import type { ${interfaceName}`)) {\n          importsToAdd.push(interfaceName);\n          modified = true;\n        }\n      }\n      \n      if (modified && importsToAdd.length > 0) {\n        // Add import statement\n        const importStatement = `import type { ${importsToAdd.join(', ')} } from '../../../types/shared.js';\\n`;\n        \n        if (content.includes(\"import type { Snippet }\")) {\n          content = content.replace(\n            \"import type { Snippet } from 'svelte';\\n\",\n            `import type { Snippet } from 'svelte';\\n${importStatement}`\n          );\n        } else {\n          content = `${importStatement}\\n${content}`;\n        }\n        \n        await writeFile(filePath, content);\n        console.log(`   ‚úÖ Fixed imports in ${filePath}: ${importsToAdd.join(', ')}`);\n      }\n    } catch (error) {\n      console.warn(`   ‚ö†Ô∏è  Could not fix ${filePath}: ${error.message}`);\n    }\n  }\n}\n\nfixAllInterfaceImports().catch(console.error);"